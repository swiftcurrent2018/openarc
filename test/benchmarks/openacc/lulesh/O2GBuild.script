#! /bin/bash
if [ $# -ge 2 ]; then
    use_mpi=$1
	dump_output=$2
elif [ $# -eq 1 ]; then
    use_mpi=$1
	dump_output=0
else
    use_mpi=0
	dump_output=0
fi

verLevel=0
mpiinclude="/opt/cray/mpt/6.3.0/gni/mpich2-intel/130/include"
openarcrt="../../../../openarcrt"
openarclib="../../../../lib"

if [ ! -f "openarcConf.txt" ]; then
    cp "openarcConf_NORMAL.txt" "openarcConf.txt"
fi

if [ "$mpiinclude" != "" ]; then
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__mpiinclude__|${mpiinclude}|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
fi

if [ "$openarcrt" != "" ]; then
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__openarcrt__|${openarcrt}|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
fi

if [ "$OPENARC_ARCH" != "" ]; then
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__openarc_arch__|${OPENARC_ARCH}|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
else
    mv "openarcConf.txt" "openarcConf.txt_tmp"
    cat "openarcConf.txt_tmp" | sed "s|__openarc_arch__|0|g" > "openarcConf.txt"
    rm "openarcConf.txt_tmp"
fi

mv "openarcConf.txt" "openarcConf.txt_tmp"
cat "openarcConf.txt_tmp" | sed "s|__use_mpi__|${use_mpi}|g" > "openarcConf.txt"
rm "openarcConf.txt_tmp"
mv "openarcConf.txt" "openarcConf.txt_tmp"
cat "openarcConf.txt_tmp" | sed "s|__dump_output__|${dump_output}|g" > "openarcConf.txt"
rm "openarcConf.txt_tmp"

java -classpath $openarclib/cetus.jar:$openarclib/antlr.jar openacc.exec.ACC2GPUDriver -verbosity=${verLevel} -gpuConfFile=openarcConf.txt *.c

if [ ! -d ./bin ]; then
    mkdir bin 
fi
echo "====> To compile the translated output file:"
echo "\$ make"
echo ""
echo "====> To run the compiled binary:"
echo "\$ cd bin; lulesh_ACC"
echo ""
echo "Available options: "
echo " -q              : quiet mode - suppress all stdout"
echo " -i <iterations> : number of cycles to run"
echo " -s <size>       : length of cube mesh along side"
echo " -r <numregions> : Number of distinct regions (def: 11)"
echo " -b <balance>    : Load balance between regions of a domain (def: 1)"
echo " -c <cost>       : Extra cost of more expensive regions (def: 1)"
echo " -f <numfiles>   : Number of files to split viz dump into (def: (np+10)/9)"
echo " -p              : Print out progress"
echo " -h              : This message"


