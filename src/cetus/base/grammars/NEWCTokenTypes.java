// $ANTLR 2.7.7 (2010-12-23): "NewCParser.g" -> "NewCParser.java"$

package cetus.base.grammars;

public interface NEWCTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int LITERAL_typedef = 4;
	int SEMI = 5;
	int VARARGS = 6;
	int LCURLY = 7;
	int LITERAL_asm = 8;
	int LITERAL_volatile = 9;
	int RCURLY = 10;
	int LITERAL_struct = 11;
	int LITERAL_union = 12;
	int LITERAL_enum = 13;
	int LITERAL_auto = 14;
	int LITERAL_register = 15;
	int LITERAL___thread = 16;
	int LITERAL_extern = 17;
	int LITERAL_static = 18;
	int LITERAL_inline = 19;
	int LITERAL_const = 20;
	int LITERAL_restrict = 21;
	int LITERAL___nvl__ = 22;
	int LITERAL___nvl_wp__ = 23;
	int LITERAL_void = 24;
	int LITERAL_char = 25;
	int LITERAL_short = 26;
	int LITERAL_int = 27;
	int LITERAL_long = 28;
	int LITERAL_float = 29;
	int LITERAL_double = 30;
	int LITERAL_signed = 31;
	int LITERAL_unsigned = 32;
	int LITERAL__Bool = 33;
	int LITERAL__Complex = 34;
	int LITERAL__Imaginary = 35;
	// "int8_t" = 36
	// "uint8_t" = 37
	// "int16_t" = 38
	// "uint16_t" = 39
	// "int32_t" = 40
	// "uint32_t" = 41
	// "int64_t" = 42
	// "uint64_t" = 43
	int LITERAL_size_t = 44;
	// "_Float128" = 45
	// "__float128" = 46
	// "__float80" = 47
	// "__ibm128" = 48
	// "_Float16" = 49
	int LITERAL___global__ = 50;
	int LITERAL___shared__ = 51;
	int LITERAL___host__ = 52;
	int LITERAL___device__ = 53;
	int LITERAL___constant__ = 54;
	int LITERAL___noinline__ = 55;
	int LITERAL___kernel = 56;
	int LITERAL___global = 57;
	int LITERAL___local = 58;
	int LITERAL___constant = 59;
	int LITERAL_typeof = 60;
	int LPAREN = 61;
	int RPAREN = 62;
	int LITERAL___complex = 63;
	int ID = 64;
	int COMMA = 65;
	int COLON = 66;
	int ASSIGN = 67;
	int LITERAL___declspec = 68;
	int Number = 69;
	int StringLiteral = 70;
	int LITERAL___attribute = 71;
	int LITERAL___asm = 72;
	int STAR = 73;
	int LBRACKET = 74;
	int RBRACKET = 75;
	int DOT = 76;
	int LITERAL___label__ = 77;
	int LITERAL_while = 78;
	int LITERAL_do = 79;
	int LITERAL_for = 80;
	int LITERAL_goto = 81;
	int LITERAL_continue = 82;
	int LITERAL_break = 83;
	int LITERAL_return = 84;
	int LITERAL_case = 85;
	int LITERAL_default = 86;
	int LITERAL_if = 87;
	int LITERAL_else = 88;
	int LITERAL_switch = 89;
	int DIV_ASSIGN = 90;
	int PLUS_ASSIGN = 91;
	int MINUS_ASSIGN = 92;
	int STAR_ASSIGN = 93;
	int MOD_ASSIGN = 94;
	int RSHIFT_ASSIGN = 95;
	int LSHIFT_ASSIGN = 96;
	int BAND_ASSIGN = 97;
	int BOR_ASSIGN = 98;
	int BXOR_ASSIGN = 99;
	int LOR = 100;
	int LAND = 101;
	int BOR = 102;
	int BXOR = 103;
	int BAND = 104;
	int EQUAL = 105;
	int NOT_EQUAL = 106;
	int LT = 107;
	int LTE = 108;
	int GT = 109;
	int GTE = 110;
	int LSHIFT = 111;
	int RSHIFT = 112;
	int PLUS = 113;
	int MINUS = 114;
	int DIV = 115;
	int MOD = 116;
	int LITERAL___builtin_nvl_get_root = 117;
	int LITERAL___builtin_nvl_alloc_nv = 118;
	int PTR = 119;
	int INC = 120;
	int DEC = 121;
	int QUESTION = 122;
	int LITERAL_sizeof = 123;
	int LITERAL___alignof__ = 124;
	int LITERAL___builtin_va_arg = 125;
	int LITERAL___builtin_offsetof = 126;
	int BNOT = 127;
	int LNOT = 128;
	int LITERAL___real = 129;
	int LITERAL___imag = 130;
	int CharLiteral = 131;
	int IntOctalConst = 132;
	int LongOctalConst = 133;
	int UnsignedOctalConst = 134;
	int IntIntConst = 135;
	int LongIntConst = 136;
	int UnsignedIntConst = 137;
	int IntHexConst = 138;
	int LongHexConst = 139;
	int UnsignedHexConst = 140;
	int FloatDoubleConst = 141;
	int DoubleDoubleConst = 142;
	int LongDoubleConst = 143;
	int NTypedefName = 144;
	int NInitDecl = 145;
	int NDeclarator = 146;
	int NStructDeclarator = 147;
	int NDeclaration = 148;
	int NCast = 149;
	int NPointerGroup = 150;
	int NExpressionGroup = 151;
	int NFunctionCallArgs = 152;
	int NNonemptyAbstractDeclarator = 153;
	int NInitializer = 154;
	int NStatementExpr = 155;
	int NEmptyExpression = 156;
	int NParameterTypeList = 157;
	int NFunctionDef = 158;
	int NCompoundStatement = 159;
	int NParameterDeclaration = 160;
	int NCommaExpr = 161;
	int NUnaryExpr = 162;
	int NLabel = 163;
	int NPostfixExpr = 164;
	int NRangeExpr = 165;
	int NStringSeq = 166;
	int NInitializerElementLabel = 167;
	int NLcurlyInitializer = 168;
	int NAsmAttribute = 169;
	int NGnuAsmExpr = 170;
	int NTypeMissing = 171;
	int LITERAL___extension__ = 172;
	int Vocabulary = 173;
	int Whitespace = 174;
	int Comment = 175;
	int CPPComment = 176;
	int PREPROC_DIRECTIVE = 177;
	int Space = 178;
	int LineDirective = 179;
	int BadStringLiteral = 180;
	int Escape = 181;
	int IntSuffix = 182;
	int NumberSuffix = 183;
	int Digit = 184;
	int HexDigit = 185;
	int HexFloatTail = 186;
	int Exponent = 187;
	int IDMEAT = 188;
	int WideCharLiteral = 189;
	int WideStringLiteral = 190;
}
